# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET 7'
  inputs:
    version: 7.x

 # Install the nuget tool.
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet >=5.2.0'
  inputs:
    versionSpec: '>=5.2.0'
    checkLatest: true

# Build the Product project
- task: DotNetCoreCLI@2
  displayName: 'build'
  inputs:
    projects: '$(Build.SourcesDirectory)\D365ODataCsdlShortener.sln'
    arguments: '--configuration $(BuildConfiguration) --no-incremental'

# Pack
- pwsh: dotnet pack $(Build.SourcesDirectory)/D365ODataCsdlShortener/D365ODataCsdlShortener.csproj -o $(Build.ArtifactStagingDirectory) --configuration $(BuildConfiguration) --no-build --include-symbols --include-source /p:SymbolPackageFormat=snupkg
  displayName: 'pack D365ODataCsdlShortener'

# Get version number
- task: PowerShell@2
  displayName: "Get D365ODataCsdlShortener's version-number from .csproj"
  inputs:
    targetType: 'inline'
    script: |
        $xml = [Xml] (Get-Content .\D365ODataCsdlShortener\D365ODataCsdlShortener.csproj)
        $version = $xml.Project.PropertyGroup.Version
        echo $version
        echo "##vso[task.setvariable variable=appversion]$version"

# publish D365ODataCsdlShortener as an .exe
- task: DotNetCoreCLI@2
  displayName: publish D365ODataCsdlShortener as executable
  inputs:
    command: 'publish'
    arguments: -c Release --runtime win-x64 /p:PublishSingleFile=true --self-contained --output $(Build.ArtifactStagingDirectory)/D365ODataCsdlShortener-v$(appversion) -p:PublishTrimmed=true
    projects: 'D365ODataCsdlShortener/D365ODataCsdlShortener.csproj'
    publishWebProjects: False
    zipAfterPublish: false 

- task: CopyFiles@2
  displayName: Prepare staging folder for upload
  inputs:
    targetFolder: $(Build.ArtifactStagingDirectory)/Nugets
    sourceFolder: $(Build.ArtifactStagingDirectory)
    content: '*.nupkg'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Nugets'
  inputs:
    ArtifactName: Nugets
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/Nugets'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: D365ODataCsdlShortener'
  inputs: 
    ArtifactName: D365ODataCsdlShortener-v$(appversion)
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/D365ODataCsdlShortener-v$(appversion)'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg;$(Build.ArtifactStagingDirectory)/**/*.snupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.snupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGetD365ODataCsdlShortener'